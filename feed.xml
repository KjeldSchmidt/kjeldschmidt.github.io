<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://kjeld-schmidt.com/</id><title>Kjeld Schmidt</title><subtitle>Thoughts on software development, crafting, DIY and internet humor.</subtitle> <updated>2025-10-19T19:44:44+02:00</updated> <author> <name>Kjeld Schmidt</name> <uri>https://kjeld-schmidt.com/</uri> </author><link rel="self" type="application/atom+xml" href="https://kjeld-schmidt.com/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://kjeld-schmidt.com/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2025 Kjeld Schmidt </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Styling Flashy Quotes for an E-Ink Screen</title><link href="https://kjeld-schmidt.com/posts/styling-flashy-quotes/" rel="alternate" type="text/html" title="Styling Flashy Quotes for an E-Ink Screen" /><published>2025-10-19T02:00:00+02:00</published> <updated>2025-10-19T19:44:16+02:00</updated> <id>https://kjeld-schmidt.com/posts/styling-flashy-quotes/</id> <content src="https://kjeld-schmidt.com/posts/styling-flashy-quotes/" /> <author> <name>Kjeld Schmidt</name> </author> <category term="creative" /> <category term="programming" /> <category term="design" /> <summary> The time of the affordable e-ink is finally here. I’ve wanted a decent-sized e-ink screen for nearly a decade now - basically ever since I became interested in microelectronics back in 2016 - and in the year of the lord 2025, they are finally a reality. I nearly bought a TRMNL at the start of the year, and the project still looks quite good. But I’ve delayed major purchases for the first months... </summary> </entry> <entry><title>The task-driven repository</title><link href="https://kjeld-schmidt.com/posts/the-task-driven-repository/" rel="alternate" type="text/html" title="The task-driven repository" /><published>2025-09-12T02:00:00+02:00</published> <updated>2025-09-12T02:00:00+02:00</updated> <id>https://kjeld-schmidt.com/posts/the-task-driven-repository/</id> <content src="https://kjeld-schmidt.com/posts/the-task-driven-repository/" /> <author> <name>Kjeld Schmidt</name> </author> <category term="Software Development" /> <summary> I’ve written before about the do-script, but I didn’t exactly go into details about what makes it so powerful. I’ve used it as a reference for myself dozens of times, but that could have been achieved with a Gist just as well. So today, I want to explain properly how the task-file can play a central role in high-quality repositories. </summary> </entry> <entry><title>Loudly adding complexity: A lesson on leadership</title><link href="https://kjeld-schmidt.com/posts/loudly-adding-complexity/" rel="alternate" type="text/html" title="Loudly adding complexity: A lesson on leadership" /><published>2023-12-21T01:00:00+01:00</published> <updated>2023-12-22T09:20:39+01:00</updated> <id>https://kjeld-schmidt.com/posts/loudly-adding-complexity/</id> <content src="https://kjeld-schmidt.com/posts/loudly-adding-complexity/" /> <author> <name>Kjeld Schmidt</name> </author> <category term="Software Development" /> <summary> Once upon a time, I had a split-second thought that something done by a fellow developer in a team was “the exact opposite of leadership”, based on them changing an established pattern1, and doing so quietly, without asking the team before or telling the team after. I wanted to explore that thought - was it just a fleeting moment of annoyance or was there some deeper insight in there? With the... </summary> </entry> <entry><title>Paintfuck: Brainfuck for art</title><link href="https://kjeld-schmidt.com/posts/Paintfuck/" rel="alternate" type="text/html" title="Paintfuck: Brainfuck for art" /><published>2023-10-27T02:00:00+02:00</published> <updated>2023-11-02T16:40:39+01:00</updated> <id>https://kjeld-schmidt.com/posts/Paintfuck/</id> <content src="https://kjeld-schmidt.com/posts/Paintfuck/" /> <author> <name>Kjeld Schmidt</name> </author> <category term="esolang" /> <summary> Susam Pal’s minimal drawing language CRF[] recently got some attention on r/programming, quickly followed by the slightly more interactive CFRS[] variant (website, reddit). I found it very enjoyable to play around with, but while I did, I constantly thought about how much the heavy reliance on [] as a looping construct makes it look like Brainfuck, and how it could be very fun to have the same... </summary> </entry> <entry><title>I think you should use a do-script</title><link href="https://kjeld-schmidt.com/posts/use-a-do-script/" rel="alternate" type="text/html" title="I think you should use a do-script" /><published>2022-08-09T02:00:00+02:00</published> <updated>2025-03-21T10:33:48+01:00</updated> <id>https://kjeld-schmidt.com/posts/use-a-do-script/</id> <content src="https://kjeld-schmidt.com/posts/use-a-do-script/" /> <author> <name>Kjeld Schmidt</name> </author> <category term="Software Development" /> <category term="Software Engineering" /> <summary> Let’s get to the point: I think you should have a do-script in your project I’ll explain what that even is and why I think you should have one The only reason I’m writing about it is that I can’t find any sources online This might be because the term “do-script” is incredibly generic and hard to google. It might also be because the concept isn’t all that popular, or generally known ... </summary> </entry> </feed>
